// Generated by CoffeeScript 1.6.2
(function() {
  var Dot, px;

  px = function(pos) {
    return "" + pos + "px";
  };

  Dot = (function() {
    function Dot(radius, center, rate, container, angle) {
      var circumference, increments;

      this.radius = radius;
      this.center = center;
      if (rate == null) {
        rate = 5;
      }
      if (container == null) {
        container = null;
      }
      this.angle = angle != null ? angle : Math.PI / 2;
      this.div = $('<div class="dot">');
      this.setPosition();
      this.div.appendTo(container);
      circumference = 2 * Math.PI * this.radius;
      increments = circumference / rate;
      this.angleIncrement = 360 / increments;
    }

    Dot.prototype.calculatePosition = function() {
      this.y = this.center.y - this.radius * Math.sin(this.angle);
      return this.x = this.center.x + this.radius * Math.cos(this.angle);
    };

    Dot.prototype.setPosition = function() {
      this.calculatePosition();
      return this.div.css({
        left: px(this.x),
        top: px(this.y)
      });
    };

    Dot.prototype.stepForward = function() {
      this.angle += this.angleIncrement;
      return this.setPosition();
    };

    return Dot;

  })();

  $(function() {
    var body, center, dots, i, interval, intervalFn, pi, radius, _i;

    body = $(document.body);
    pi = Math.PI;
    interval = .05;
    center = {
      y: window.innerHeight / 2,
      x: window.innerWidth / 2
    };
    new Dot(0, center, 5, body);
    dots = [];
    for (i = _i = 1; _i <= 30; i = ++_i) {
      radius = 15 * i;
      dots.push(new Dot(radius, center, interval, body, 0));
      dots.push(new Dot(radius, center, interval, body, Math.PI / 2));
      dots.push(new Dot(radius, center, interval, body, Math.PI));
      dots.push(new Dot(radius, center, interval, body, Math.PI * 3 / 2));
    }
    intervalFn = function() {
      var dot, _j, _len, _results;

      _results = [];
      for (_j = 0, _len = dots.length; _j < _len; _j++) {
        dot = dots[_j];
        _results.push(dot.stepForward());
      }
      return _results;
    };
    return window.setInterval(intervalFn, 10);
  });

}).call(this);
